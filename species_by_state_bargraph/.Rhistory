#Load packages
library(ggplot2); theme_set(theme_bw())
install.packages("rriskDistributions")
library(rriskDistributions)
joint.point <- 34.74
joint.lower <- -3.02
joint.upper <- 89.79
single.point <- -9.410
single.lower <- -41.21
single.upper <- 26.32
library(rriskDistributions)
get.lnorm.par(p=c(0.025,0.5,0.975),q=c(joint.lower,joint.point,joint.upper))
get.norm.par(p=c(0.025,0.5,0.975),q=c(joint.lower,joint.point,joint.upper))
distpars <- get.norm.par(p=c(0.025,0.5,0.975),q=c(joint.lower,joint.point,joint.upper))
distpars$par[1]
distpars$par[2]
distpars
distpars[1]
?rnorm
set.seed(42)
somenumbers <- rnorm(n=1000,mean=distpars[1],sd=distpars[2])
head(somenumbers)
?quantile
quantile(somenumbers,probs=0.025,0.5,0.975)
quantile(somenumbers,probs=c(0.025,0.5,0.975))
set.seed(42)
somenumbers <- rnorm(n=10000,mean=distpars[1],sd=distpars[2])
quantile(somenumbers,probs=c(0.025,0.5,0.975))
set.seed(42)
somenumbers <- rnorm(n=100000,mean=distpars[1],sd=distpars[2])
quantile(somenumbers,probs=c(0.025,0.5,0.975))
distpars <- get.norm.par(p=c(0.025,0.975),q=c(joint.lower,joint.upper))
set.seed(42)
somenumbers <- rnorm(n=100000,mean=distpars[1],sd=distpars[2])
quantile(somenumbers,probs=c(0.025,0.5,0.975))
quantile(somenumbers,probs=c(0.025,0.975))
joint.point <- 34.74
joint.lower <- -3.02
joint.upper <- 89.79
single.point <- -9.410
single.lower <- -41.21
single.upper <- 26.32
joint.distpars <- get.norm.par(p=c(0.025,0.975),q=c(joint.lower,joint.upper))
single.distpars <- get.norm.par(p=c(0.025,0.975),q=c(single.lower,single.upper))
set.seed(42)
joint.somenumbers <- rnorm(n=100000,mean=joint.distpars[1],sd=joint.distpars[2])
single.somenumbers <- rnorm(n=100000,mean=single.distpars[1],sd=single.distpars[2])
jcs <- joint.somenumbers-single.somenumbers
quantile(jcs,probs=c(0.025,0.975))
mean(jcs)
?ecdf
Sea.Lice.Returns <- read.csv("C:/Users/ben42/Downloads/Sea Lice Returns.csv")
View(Sea.Lice.Returns)
names(Sea.Lice.Returns)
head(WEEKLY_AVERAGE_AF)
head(Sea.Lice.Returns)
sealiceag <- aggregate(WEEKLY_AVERAGE_AF~BUSINESS_NO, data=Sea.Lice.Returns, fun=mean)
sealiceag <- aggregate(WEEKLY_AVERAGE_AF~BUSINESS_NO, data=Sea.Lice.Returns, FUN=mean)
sealiceag
library(ggplot2)
ggplot(aes(x=BUSINESS_NO,y=WEEKLY_AVERAGE_AF),data=sealiceag) + geom_bar()
ggplot(aes(y=WEEKLY_AVERAGE_AF),data=sealiceag) + geom_bar()
ggplot(aes(x=WEEKLY_AVERAGE_AF),data=sealiceag) + geom_bar()
ggplot(aes(x=WEEKLY_AVERAGE_AF),data=sealiceag) + geom_col()
ggplot(aes(y=WEEKLY_AVERAGE_AF),data=sealiceag) + geom_col()
ggplot(aes(x=BUSINESS_NO,y=WEEKLY_AVERAGE_AF),data=sealiceag) + geom_col()
ms_fish_escapes <- read.csv("C:/Users/ben42/Downloads/ms_fish_escapes.csv", header=FALSE)
View(ms_fish_escapes)
#Fish escapes
head(ms_fish_escapes)
ms_fish_escapes <- read.csv("C:/Users/ben42/Nextcloud/AA/Animal Equality/scottish sea lice/ms_fish_escapes.csv", header=FALSE)
View(ms_fish_escapes)
#Fish escapes
head(ms_fish_escapes)
#Fish escapes
ms_fish_escapes <- read.csv("C:/Users/ben42/Nextcloud/AA/Animal Equality/scottish sea lice/ms_fish_escapes.csv", header=FALSE)
head(ms_fish_escapes)
nrow(ms_fish_escapes)
#Fish escapes
ms_fish_escapes <- read.csv("C:/Users/ben42/Nextcloud/AA/Animal Equality/scottish sea lice/ms_fish_escapes.csv", header=TRUE)
head(ms_fish_escapes)
ms_fish_escapes$Escape.Start.Date
date(ms_fish_escapes$Escape.Start.Date)
as.date(ms_fish_escapes$Escape.Start.Date)
as.Date(ms_fish_escapes$Escape.Start.Date)
as.POSIXct(ms_fish_escapes$Escape.Start.Date)
[1] "string"
#Fish escapes
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
ms_fish_escapes$year <- substrRight(ms_fish_escapes$Escape.Start.Date, 4)
ms_fish_escapes$year <- substrRight(as.character(ms_fish_escapes$Escape.Start.Date), 4)
ms_fish_escapes$year
ms_fish_escapes.subset <- ms_fish_escapes[ms_fish_escapes$year=="2021" |
ms_fish_escapes$year=="2020" |
ms_fish_escapes$year=="2019",]
ms_fish_escapes.subset$year
ms_fish_escapes.subset <- ms_fish_escapes[ms_fish_escapes$year=="2021" |
ms_fish_escapes$year=="2020" |
ms_fish_escapes$year=="2019" |
ms_fish_escapes$year=="2018" |
ms_fish_escapes$year=="2017",]
ms_fish_escapes.subset$year
head(ms_fish_escapes.subset)
ms_fish_escapes.subset$Final.Number.Escaped
ms_fish_escapes.subset2 <- ms_fish_escapes.subset[ms_fish_escapes.subset$Final.Number.Escaped!="0",]
ms_fish_escapes.subset2$Final.Number.Escaped
ms_fish_escapes.subset2$Initial.Number.Escaped
ms_fish_escapes.subset2[,c('Final.Number.Escaped']
ms_fish_escapes.subset2[,c('Final.Number.Escaped')]
ms_fish_escapes.subset2[,c('Final.Number.Escaped','Initial.Number.Escaped')]
ms_fish_escapes.subset2$Final.Number.Escaped.actualnumber <- c(23970,216,0,20,48834,33072,4,1558,163,0,493,0,283,1601,4465,175,24752,
11040,1000,0,5400,21712,6,200,500,12,0,0,4000,0,13952,17398,0,0,73684,1300,3000,0)
ms_fish_escapes.subset2[,c('Final.Number.Escaped.actualnumber','Final.Number.Escaped','Initial.Number.Escaped')]
head(ms_fish_escapes)
escapesag <- aggregate(Final.Number.Escaped.actualnumber~Operator.at.Time.of.Escape, data=ms_fish_escapes.subset2, FUN=sum)
escapesag
head(Sea.Lice.Returns)
sealiceag <- aggregate(WEEKLY_AVERAGE_AF~BUSINESS_NAME, data=Sea.Lice.Returns, FUN=mean)
sealiceag
ggplot(aes(x=BUSINESS_NAME,y=WEEKLY_AVERAGE_AF),data=sealiceag) + geom_col()
ggplot(aes(x=BUSINESS_NAME,y=WEEKLY_AVERAGE_AF),data=sealiceag) + geom_col() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(aes(x=Operator.at.Time.of.Escape,y=Final.Number.Escaped.actualnumber),data=escapesag) + geom_col() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(aes(x=BUSINESS_NAME,y=WEEKLY_AVERAGE_AF),data=sealiceag) + geom_col() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + ggtitle("sea lice incidence")
ggplot(aes(x=Operator.at.Time.of.Escape,y=Final.Number.Escaped.actualnumber),data=escapesag) + geom_col() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + ggtitle("fish escapes")
list("snell"=c(3,2,3))
list("snell"=c(3,2,3),
"summer"=data.frame("griglet"=2,"eeyore"=3))
list(  "summer"=data.frame("griglet"=2,"eeyore"=3))
list("summer"=data.frame("griglet"=2,"eeyore"=3),
"jamie"=6,
"emma"=1.2)
list("summer"=data.frame("griglet"=c(2,0.5),"eeyore"=c(3,42),
list("summer"=data.frame("griglet"=c(2,0.5),"eeyore"=c(3,42)),
"jamie"=6,
"emma"=1.2)
setwd("C:/Users/ben42/Nextcloud/AA")
data.frame("col1"=c(),
"col2"=c())
dat <- data.frame("col1"=c(),
"col2"=c())
dat
dat <- data.frame("col1"=NA,
"col2"=NA)
dat
install.packages(c("shinylive", "httpuv"))
install.packages(c("shinylive", "httpuv"))
?system.file
library(here)
here::set_here() #Set working directory
app_dir <- system.file("../apps/species_by_state_bargraph", "app.R", package = "shiny")
app_dir
out_dir <- tempfile("shinylive-export")
shinylive::export(app_dir, out_dir)
shinylive::export("../apps/species_by_state_bargraph/app.R", out_dir)
shinylive::export("../apps/species_by_state_bargraph", out_dir)
app_dir <- system.file("../apps/species_by_state_bargraph",
package = "shiny")
out_dir <- tempfile("shinylive-export")
shinylive::export("../apps/species_by_state_bargraph", out_dir)
?is_dir
"../apps/species_by_state_bargraph"
system.file("../apps/species_by_state_bargraph",
package = "shiny")
app_dir <- system.file("examples", "01_hello", package = "shiny")
shinylive::export("../apps/species_by_state_bargraph", out_dir)
shinylive::export("../apps/species_by_state_bargraph",
"../shinyliveexport/species_by_state_bargraph")
dir("../apps/species_by_state_bargraph")
shinylive::export("apps/species_by_state_bargraph",
"shinyliveexport/species_by_state_bargraph")
dir("apps/species_by_state_bargraph")
shinylive::export("../apps/species_by_state_bargraph/",
"../shinyliveexport/species_by_state_bargraph/")
here::set_here() #Set working directory
shinylive::export("../apps/species_by_state_bargraph/",
"../shinyliveexport/species_by_state_bargraph/")
install.packages("rsconnect")
rsconnect::setAccountInfo(name='animalask', token='86921F417FDC5E4A00ECD7C2620C0ECF', secret='Mc9HeQ3/jXaudLkEMbjkkxO4BlUAN51kfQr5h6bW')
shiny::runApp('~/Documents/USA Scoping/apps/species_by_state_bargraph')
runApp('~/Documents/USA Scoping/apps/state_by_species_hexagons')
shiny::runApp('~/Documents/USA Scoping/apps/species_by_state_bargraph')
